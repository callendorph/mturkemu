"""
Django settings for mturkemu project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import mturkemu.config.logs as logs

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# This is obviously not secure !
SECRET_KEY = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bootstrap3',
    'mturk',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
# Not required for MTurk API testing
#    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mturkemu.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, "templates"),
            os.path.join(BASE_DIR, "mturk/templates"),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mturkemu.wsgi.application'

# Messaging Settings
from django.contrib.messages import constants as message_constants
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'
MESSAGE_TAGS = {
    message_constants.INFO: 'alert-info',
    message_constants.WARNING: 'alert-warning',
    message_constants.ERROR: 'alert-danger',
}

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

######################################
# Login Redirect -
######################################
LOGIN_REDIRECT_URL = '/'


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

##############################
# Schemas
##############################
# XML Schemas associated with content in the
# MTurk API - specifically the questions and answers
# that are used to create tasks.
#
SCHEMAS_DIR = os.path.join(BASE_DIR, "schemas")
# The Keys of this dict map to the root element name of these schemas.
SCHEMAS = {
    "QuestionForm" : os.path.join(SCHEMAS_DIR, "QuestionForm_20051001.xsd"),
    "QuestionFormAnswers" : os.path.join(SCHEMAS_DIR, "QuestionFormAnswers_20051001.xsd"),
    "HTMLQuestion" : os.path.join(SCHEMAS_DIR, "HTMLQuestion_20111111.xsd"),
    "AnswerKey" : os.path.join(SCHEMAS_DIR, "AnswerKey_20051001.xsd"),
    "ExternalQuestion" : os.path.join(SCHEMAS_DIR, "ExternalQuestion_20060714.xsd"),
    "FormattedContent" : os.path.join(SCHEMAS_DIR, "FormattedContentXHTMLSubset_20060714.xsd"),
}


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
BOOTSTRAP_DIR = os.path.join(BASE_DIR, "node_modules/bootstrap/dist")
JQUERY_DIR = os.path.join(BASE_DIR, "node_modules/jquery/dist")
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "www"),
    os.path.join(BOOTSTRAP_DIR),
    os.path.join(JQUERY_DIR),
]

STATIC_ROOT = os.path.join(BASE_DIR, "static")

######################################
# Logging Configurations
######################################
LOG_DIR = os.path.join(BASE_DIR, "logs")
LOGGING = logs.GenerateLoggingConfig(LOG_DIR)
